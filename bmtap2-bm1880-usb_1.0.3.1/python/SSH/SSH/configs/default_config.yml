# --------------------------------------------------------
# SSH: Single Stage Headless Face Detector
# Default configuration file
# Written by Mahyar Najibi
# --------------------------------------------------------

#***************** TRAIN Options***************************
TRAIN:
  # WHETHER TO TRAIN WITH ORIGINAL SIZE
  ORIG_SIZE: False

  # TRAINING SCALES IF NOT IN ORIG_SIZE TRAINING MODE
  # CURRENTLY ONLY SINGLE SCALE SUPPORTED
  SCALES: [300,]

  # MAXIMUM SIDE OF THE IMAGE IN PIXELS
  MAX_SIZE: 400

  # WHETHER TO USE HORIZONTAL FLIPPING
  USE_FLIPPED: True

  # NUMBER OF IMAGES PER BATCH
  # CURRENTLY ONLY SINGLE IMAGE SUPPORTED
  IMS_PER_BATCH: 1

  # TRAINING BATCH SIZE
  BATCH_SIZE: 128

  # BG THRESHOLDS
  BG_THRESH_HI: 0.5
  BG_THRESH_LOW: 0.0

  # NUMBER OF ITERATIONS AND INFIX STRING FOR SNAPSHOT
  SNAPSHOT: 10000
  SNAPSHOT_INFIX: ''

  # MAKE MINI-BATCHES FROM IMAGES THAT HAVE SIMILAR RATIOS
  ASPECT_GROUPING: True

  # THRESHOLDS FOR DEFINING POSITIVE AND NEGATIVE ANCHORS
  ANCHOR_POSITIVE_OVERLAP: 0.5
  ANCHOR_NEGATIVE_OVERLAP: 0.3

  # FRACTION OF MINI-BATCH TO BE RESERVED FOR FG CLASS
  ANCHOR_FG_FRACTION: 0.25

  # NUMBER OF ANCHORS PER MINI-BATCH
  ANCHORS_PER_BATCH: 256

  # NMS Threshold
  NMS_THRESH: 0.3

  # NUMBER OF TOP SCORING ANCHORS TO KEEP BEFORE AND AFTER APPLYING NMS
  ANCHOR_N_PRE_NMS: 1000
  ANCHOR_N_POST_NMS: 300

  # MINIMUM ANCHORE SIZE
  ANCHOR_MIN_SIZE: 4

  # WHETHER TO APPLY HARD POSITIVE MINING FOR TRAINING
  # NOTE: HARD NEGATIVE MINING IS HANDLED IN PROTOTXT
  HARD_POSITIVE_MINING: True

  # BBOX INSIDE WEIGHTS
  BBOX_INSIDE_WEIGHTS: [1.0, 1.0, 1.0, 1.0]

  # WEIGHT FOR POSITIVES
  # positives: p * 1 / {num positives}
  # negatives (1-p)
  # Set to -1.0 to use uniform example weighting
  POSITIVE_WEIGHT: -1.0

  # WHETHER TO FORCE ASSIGNING THE ANCHOR WITH HIGHEST IOU TO EACH GT
  FORCE_FG_FOR_EACH_GT: False




#***************** TEST Options***************************
TEST:
  # WHETHER TO TEST WITH ORIGINAL IMAGE SIZE
  ORIG_SIZE: False

  # TEST SCALE: MIN SIDE OF THE IMAGE IN PIXELS (IF ORIG_SIZE=False)
  # DEFINE MULTIPLE VALUES FOR PYRAMID TESTING
  SCALES: [300,]

  # KEEP THE MAX SIDE OF THE IMAGE TO LESS THAN MAX_SIZE
  # IF NOT IN ORIG_SCALE OR PYRAMID CASE
  # IN PYRAMID THE PYRAMID_BASE_SIZE IS USED TO BOUND MAX SIZE
  MAX_SIZE: 400

  # THE BASE SIZE IN THE PYRAMID [MIN_SIZE,MAX_SIZE]
  # (ONLY IN PYRAMID MODE WHEN THERE ARE MORE THAN ONE SCALE)
  # THE IMAGE IS FIRST RE-SIZED TO THE PYRAMID_BASE_SIZE TO BOUND THE MAXIMUM SIDE
  # THEN THE MIN SIDE IS SCALED W.R.T. THE VALUES IN THE "SCALES" VARIABLE
  PYRAMID_BASE_SIZE: [800,1200]

  # NMS THRESHOLD TO BE APPLIED TO THE FINAL DETECTIONS
  NMS_THRESH: 0.3

  # NUMBER OF DETECTIONS PER SSH MODULE PRIOR TO APPLYING NMS
  N_DETS_PER_MODULE: 1000

  # THE MINIMUM SIZE OF THE ANCHORS
  ANCHOR_MIN_SIZE: 0





#***************** COMMON Options ***************************

# DEBUG MODE, IN DEBUG MODE CAFFE OUTPUTS WOULD BE SURPASSED
DEBUG: False

# PIXEL MEANS TO BE SUBTRACTED FROM EACH IMAGE(BGR ORDER)
PIXEL_MEANS: [[[102.9801, 115.9465, 122.7717]]]

# RANDOM SEED
RNG_SEED: 3

# EPSILON
EPS: 1e-14

# DATA DIRECTORY
DATA_DIR: '/data/dataset/tinyssh/'

# MATLAB COMMAND
MATLAB: 'matlab'

# EXPERIMENT ROOT
EXP_DIR: 'SSH'

# WHETHER TO USE THE GPU VERSION OF NMS
USE_GPU_NMS: Flase

# GPU ID
GPU_ID: 0

