#ifndef BM168S_TPU_REG_H
#define BM168S_TPU_REG_H

/*
 * This file is generated by tools. Do not edit it manually.
 */

#include <stdint.h>
#include <stdio.h>

typedef uint8_t u8;
typedef uint32_t u32;
typedef uint64_t u64;
typedef unsigned long long ullong;

typedef struct {
  u32 des_cmd_en;
  u32 des_cmd_end;
  u32 des_cmd_id_en;
  u32 des_cmd_id_tpu;
  u32 des_cmd_id_gdma;
  u32 des_cmd_keep;
  u32 des_cmd_intr_en;
  u32 des_tsk_typ;
  u32 des_tsk_eu_typ;
  u32 des_tsk_opd_num;
  u32 des_opt_right_shift;
  u32 des_opt_left_shift;
  u32 des_opt_shift_typ;
  u32 des_opt_res_add;
  u32 des_opt_relu;
  u32 des_opt_left_tran;
  u32 des_opt_winograd;
  u32 des_opt_kernel_rotate;
  u32 des_opt_opd0_sign;
  u32 des_opt_opd1_sign;
  u32 des_opt_opd2_sign;
  u32 des_opt_res0_prec;
  u32 des_opt_opd0_prec;
  u32 des_opt_opd1_prec;
  u32 des_opt_opd2_prec;
  u32 des_opt_opd0_const;
  u32 des_opt_opd1_const;
  u32 des_opt_opd2_const;
  u32 des_short_res0_str;
  u32 des_short_opd0_str;
  u32 des_short_opd1_str;
  u32 des_short_opd2_str;
  u32 des_opd0_x_ins0;
  u32 des_opd0_y_ins0;
  u32 des_opd1_x_ins0;
  u32 des_opd1_y_ins0;
  u32 des_opd0_up_pad;
  u32 des_opd0_dn_pad;
  u32 des_opd0_lf_pad;
  u32 des_opd0_rt_pad;
  u32 des_res_op_x_str;
  u32 des_res_op_y_str;
  u64 des_tsk_lane_num;
  u32 des_res0_n;
  u32 des_res0_c;
  u32 des_res0_h;
  u32 des_res0_w;
  u32 des_opd0_n;
  u32 des_opd0_c;
  u32 des_opd0_h;
  u32 des_opd0_w;
  u32 des_opd1_n;
  u32 des_opd1_c;
  u32 des_opd1_h;
  u32 des_opd1_w;
  u32 des_res0_h_shift;
  u32 des_res0_w_shift;
  u32 des_opd0_h_shift;
  u32 des_opd0_w_shift;
  u32 des_opd1_h_shift;
  u32 des_opd1_w_shift;
  u32 des_res0_n_str;
  u32 des_res0_c_str;
  u32 des_opd0_n_str;
  u32 des_opd0_c_str;
  u32 des_opd1_n_str;
  u32 des_opd1_c_str;
  u32 des_opd2_n_str;
  u32 des_opd2_c_str;
  u32 des_opt_res_add_sign;
  u32 des_rsvd0;
  u32 des_res0_addr;
  u32 des_opd0_addr;
  u32 des_opd1_addr;
  u32 des_opd2_addr;
  u32 des_res0_h_str;
  u32 des_res0_w_str;
  u32 des_opd0_h_str;
  u32 des_opd0_w_str;
  u32 des_opd1_h_str;
  u32 des_opd1_w_str;
  u32 des_opd2_h_str;
  u32 des_opd2_w_str;
} tpu_reg_t;

static inline void parse_tpu_reg(tpu_reg_t *r, const u32 *p)
{
  r->des_cmd_en = p[0] & 1;
  r->des_cmd_end = (p[0] >> 1) & 1;
  r->des_cmd_id_en = (p[0] >> 2) & 1;
  r->des_cmd_id_tpu = (p[0] >> 3) & ((1u << 16) - 1);
  r->des_cmd_id_gdma = (p[0] >> 19) & ((1u << 13) - 1);
  r->des_cmd_id_gdma |= (u64)(p[1] & ((1u << 3) - 1)) << 13;
  r->des_cmd_keep = (p[1] >> 3) & 1;
  r->des_cmd_intr_en = (p[1] >> 4) & 1;
  r->des_tsk_typ = (p[1] >> 5) & ((1u << 4) - 1);
  r->des_tsk_eu_typ = (p[1] >> 9) & ((1u << 5) - 1);
  r->des_tsk_opd_num = (p[1] >> 14) & ((1u << 2) - 1);
  r->des_opt_right_shift = (p[1] >> 16) & ((1u << 5) - 1);
  r->des_opt_left_shift = (p[1] >> 21) & ((1u << 5) - 1);
  r->des_opt_shift_typ = (p[1] >> 26) & 1;
  r->des_opt_res_add = (p[1] >> 27) & 1;
  r->des_opt_relu = (p[1] >> 28) & 1;
  r->des_opt_left_tran = (p[1] >> 29) & 1;
  r->des_opt_winograd = (p[1] >> 30) & 1;
  r->des_opt_kernel_rotate = (p[1] >> 31) & 1;
  r->des_opt_opd0_sign = p[2] & 1;
  r->des_opt_opd1_sign = (p[2] >> 1) & 1;
  r->des_opt_opd2_sign = (p[2] >> 2) & 1;
  r->des_opt_res0_prec = (p[2] >> 3) & ((1u << 3) - 1);
  r->des_opt_opd0_prec = (p[2] >> 6) & ((1u << 3) - 1);
  r->des_opt_opd1_prec = (p[2] >> 9) & ((1u << 3) - 1);
  r->des_opt_opd2_prec = (p[2] >> 12) & ((1u << 3) - 1);
  r->des_opt_opd0_const = (p[2] >> 15) & 1;
  r->des_opt_opd1_const = (p[2] >> 16) & 1;
  r->des_opt_opd2_const = (p[2] >> 17) & 1;
  r->des_short_res0_str = (p[2] >> 18) & ((1u << 3) - 1);
  r->des_short_opd0_str = (p[2] >> 21) & ((1u << 3) - 1);
  r->des_short_opd1_str = (p[2] >> 24) & ((1u << 3) - 1);
  r->des_short_opd2_str = (p[2] >> 27) & ((1u << 3) - 1);
  r->des_opd0_x_ins0 = (p[2] >> 30) & ((1u << 2) - 1);
  r->des_opd0_x_ins0 |= (u64)(p[3] & ((1u << 2) - 1)) << 2;
  r->des_opd0_y_ins0 = (p[3] >> 2) & ((1u << 4) - 1);
  r->des_opd1_x_ins0 = (p[3] >> 6) & ((1u << 4) - 1);
  r->des_opd1_y_ins0 = (p[3] >> 10) & ((1u << 4) - 1);
  r->des_opd0_up_pad = (p[3] >> 14) & ((1u << 4) - 1);
  r->des_opd0_dn_pad = (p[3] >> 18) & ((1u << 4) - 1);
  r->des_opd0_lf_pad = (p[3] >> 22) & ((1u << 4) - 1);
  r->des_opd0_rt_pad = (p[3] >> 26) & ((1u << 4) - 1);
  r->des_res_op_x_str = (p[3] >> 30) & ((1u << 2) - 1);
  r->des_res_op_x_str |= (u64)(p[4] & ((1u << 2) - 1)) << 2;
  r->des_res_op_y_str = (p[4] >> 2) & ((1u << 4) - 1);
  r->des_tsk_lane_num = (p[4] >> 6) & ((1u << 26) - 1);
  r->des_tsk_lane_num |= (u64)(p[5]) << 26;
  r->des_tsk_lane_num |= (u64)(p[6] & ((1u << 6) - 1)) << 58;
  r->des_res0_n = (p[6] >> 6) & ((1u << 16) - 1);
  r->des_res0_c = (p[6] >> 22) & ((1u << 10) - 1);
  r->des_res0_c |= (u64)(p[7] & ((1u << 2) - 1)) << 10;
  r->des_res0_h = (p[7] >> 2) & ((1u << 16) - 1);
  r->des_res0_w = (p[7] >> 18) & ((1u << 14) - 1);
  r->des_res0_w |= (u64)(p[8] & ((1u << 2) - 1)) << 14;
  r->des_opd0_n = (p[8] >> 2) & ((1u << 16) - 1);
  r->des_opd0_c = (p[8] >> 18) & ((1u << 12) - 1);
  r->des_opd0_h = (p[8] >> 30) & ((1u << 2) - 1);
  r->des_opd0_h |= (u64)(p[9] & ((1u << 14) - 1)) << 2;
  r->des_opd0_w = (p[9] >> 14) & ((1u << 16) - 1);
  r->des_opd1_n = (p[9] >> 30) & ((1u << 2) - 1);
  r->des_opd1_n |= (u64)(p[10] & ((1u << 10) - 1)) << 2;
  r->des_opd1_c = (p[10] >> 10) & ((1u << 12) - 1);
  r->des_opd1_h = (p[10] >> 22) & ((1u << 10) - 1);
  r->des_opd1_h |= (u64)(p[11] & ((1u << 6) - 1)) << 10;
  r->des_opd1_w = (p[11] >> 6) & ((1u << 16) - 1);
  r->des_res0_h_shift = (p[11] >> 22) & ((1u << 4) - 1);
  r->des_res0_w_shift = (p[11] >> 26) & ((1u << 4) - 1);
  r->des_opd0_h_shift = (p[11] >> 30) & ((1u << 2) - 1);
  r->des_opd0_h_shift |= (u64)(p[12] & ((1u << 2) - 1)) << 2;
  r->des_opd0_w_shift = (p[12] >> 2) & ((1u << 4) - 1);
  r->des_opd1_h_shift = (p[12] >> 6) & ((1u << 4) - 1);
  r->des_opd1_w_shift = (p[12] >> 10) & ((1u << 4) - 1);
  r->des_res0_n_str = (p[12] >> 14) & ((1u << 18) - 1);
  r->des_res0_n_str |= (u64)(p[13] & 1) << 18;
  r->des_res0_c_str = (p[13] >> 1) & ((1u << 19) - 1);
  r->des_opd0_n_str = (p[13] >> 20) & ((1u << 12) - 1);
  r->des_opd0_n_str |= (u64)(p[14] & ((1u << 7) - 1)) << 12;
  r->des_opd0_c_str = (p[14] >> 7) & ((1u << 19) - 1);
  r->des_opd1_n_str = (p[14] >> 26) & ((1u << 6) - 1);
  r->des_opd1_n_str |= (u64)(p[15] & ((1u << 13) - 1)) << 6;
  r->des_opd1_c_str = (p[15] >> 13) & ((1u << 19) - 1);
  r->des_opd2_n_str = p[16] & ((1u << 19) - 1);
  r->des_opd2_c_str = (p[16] >> 19) & ((1u << 13) - 1);
  r->des_opd2_c_str |= (u64)(p[17] & ((1u << 6) - 1)) << 13;
  r->des_opt_res_add_sign = (p[17] >> 6) & 1;
  r->des_rsvd0 = (p[17] >> 7) & ((1u << 25) - 1);
  r->des_res0_addr = p[18];
  r->des_opd0_addr = p[19];
  r->des_opd1_addr = p[20];
  r->des_opd2_addr = p[21];
  r->des_res0_h_str = p[22];
  r->des_res0_w_str = p[23];
  r->des_opd0_h_str = p[24];
  r->des_opd0_w_str = p[25];
  r->des_opd1_h_str = p[26];
  r->des_opd1_w_str = p[27];
  r->des_opd2_h_str = p[28];
  r->des_opd2_w_str = p[29];
}

static inline void emit_tpu_reg(const tpu_reg_t *r, u32 *_p)
{
  volatile u32 *p = (typeof(p))_p;
  p[29] = (r->des_opd2_w_str & (((u64)1 << 32) - 1));
  p[28] = (r->des_opd2_h_str & (((u64)1 << 32) - 1));
  p[27] = (r->des_opd1_w_str & (((u64)1 << 32) - 1));
  p[26] = (r->des_opd1_h_str & (((u64)1 << 32) - 1));
  p[25] = (r->des_opd0_w_str & (((u64)1 << 32) - 1));
  p[24] = (r->des_opd0_h_str & (((u64)1 << 32) - 1));
  p[23] = (r->des_res0_w_str & (((u64)1 << 32) - 1));
  p[22] = (r->des_res0_h_str & (((u64)1 << 32) - 1));
  p[21] = (r->des_opd2_addr & (((u64)1 << 32) - 1));
  p[20] = (r->des_opd1_addr & (((u64)1 << 32) - 1));
  p[19] = (r->des_opd0_addr & (((u64)1 << 32) - 1));
  p[18] = (r->des_res0_addr & (((u64)1 << 32) - 1));
  p[17] = ((r->des_opd2_c_str >> 13) & ((1u << 6) - 1)) |
          ((r->des_opt_res_add_sign & 1) << 6) |
          ((r->des_rsvd0 & ((1u << 25) - 1)) << 7);
  p[16] = (r->des_opd2_n_str & ((1u << 19) - 1)) |
          ((r->des_opd2_c_str & ((1u << 13) - 1)) << 19);
  p[15] = ((r->des_opd1_n_str >> 6) & ((1u << 13) - 1)) |
          ((r->des_opd1_c_str & ((1u << 19) - 1)) << 13);
  p[14] = ((r->des_opd0_n_str >> 12) & ((1u << 7) - 1)) |
          ((r->des_opd0_c_str & ((1u << 19) - 1)) << 7) |
          ((r->des_opd1_n_str & ((1u << 6) - 1)) << 26);
  p[13] = ((r->des_res0_n_str >> 18) & 1) |
          ((r->des_res0_c_str & ((1u << 19) - 1)) << 1) |
          ((r->des_opd0_n_str & ((1u << 12) - 1)) << 20);
  p[12] = ((r->des_opd0_h_shift >> 2) & ((1u << 2) - 1)) |
          ((r->des_opd0_w_shift & ((1u << 4) - 1)) << 2) |
          ((r->des_opd1_h_shift & ((1u << 4) - 1)) << 6) |
          ((r->des_opd1_w_shift & ((1u << 4) - 1)) << 10) |
          ((r->des_res0_n_str & ((1u << 18) - 1)) << 14);
  p[11] = ((r->des_opd1_h >> 10) & ((1u << 6) - 1)) |
          ((r->des_opd1_w & ((1u << 16) - 1)) << 6) |
          ((r->des_res0_h_shift & ((1u << 4) - 1)) << 22) |
          ((r->des_res0_w_shift & ((1u << 4) - 1)) << 26) |
          ((r->des_opd0_h_shift & ((1u << 2) - 1)) << 30);
  p[10] = ((r->des_opd1_n >> 2) & ((1u << 10) - 1)) |
          ((r->des_opd1_c & ((1u << 12) - 1)) << 10) |
          ((r->des_opd1_h & ((1u << 10) - 1)) << 22);
  p[9] = ((r->des_opd0_h >> 2) & ((1u << 14) - 1)) |
         ((r->des_opd0_w & ((1u << 16) - 1)) << 14) |
         ((r->des_opd1_n & ((1u << 2) - 1)) << 30);
  p[8] = ((r->des_res0_w >> 14) & ((1u << 2) - 1)) |
         ((r->des_opd0_n & ((1u << 16) - 1)) << 2) |
         ((r->des_opd0_c & ((1u << 12) - 1)) << 18) |
         ((r->des_opd0_h & ((1u << 2) - 1)) << 30);
  p[7] = ((r->des_res0_c >> 10) & ((1u << 2) - 1)) |
         ((r->des_res0_h & ((1u << 16) - 1)) << 2) |
         ((r->des_res0_w & ((1u << 14) - 1)) << 18);
  p[6] = ((r->des_tsk_lane_num >> 58) & ((1u << 6) - 1)) |
         ((r->des_res0_n & ((1u << 16) - 1)) << 6) |
         ((r->des_res0_c & ((1u << 10) - 1)) << 22);
  p[5] = ((r->des_tsk_lane_num >> 26) & (((u64)1 << 32) - 1));
  p[4] = ((r->des_res_op_x_str >> 2) & ((1u << 2) - 1)) |
         ((r->des_res_op_y_str & ((1u << 4) - 1)) << 2) |
         ((r->des_tsk_lane_num & ((1u << 26) - 1)) << 6);
  p[3] = ((r->des_opd0_x_ins0 >> 2) & ((1u << 2) - 1)) |
         ((r->des_opd0_y_ins0 & ((1u << 4) - 1)) << 2) |
         ((r->des_opd1_x_ins0 & ((1u << 4) - 1)) << 6) |
         ((r->des_opd1_y_ins0 & ((1u << 4) - 1)) << 10) |
         ((r->des_opd0_up_pad & ((1u << 4) - 1)) << 14) |
         ((r->des_opd0_dn_pad & ((1u << 4) - 1)) << 18) |
         ((r->des_opd0_lf_pad & ((1u << 4) - 1)) << 22) |
         ((r->des_opd0_rt_pad & ((1u << 4) - 1)) << 26) |
         ((r->des_res_op_x_str & ((1u << 2) - 1)) << 30);
  p[2] = (r->des_opt_opd0_sign & 1) |
         ((r->des_opt_opd1_sign & 1) << 1) |
         ((r->des_opt_opd2_sign & 1) << 2) |
         ((r->des_opt_res0_prec & ((1u << 3) - 1)) << 3) |
         ((r->des_opt_opd0_prec & ((1u << 3) - 1)) << 6) |
         ((r->des_opt_opd1_prec & ((1u << 3) - 1)) << 9) |
         ((r->des_opt_opd2_prec & ((1u << 3) - 1)) << 12) |
         ((r->des_opt_opd0_const & 1) << 15) |
         ((r->des_opt_opd1_const & 1) << 16) |
         ((r->des_opt_opd2_const & 1) << 17) |
         ((r->des_short_res0_str & ((1u << 3) - 1)) << 18) |
         ((r->des_short_opd0_str & ((1u << 3) - 1)) << 21) |
         ((r->des_short_opd1_str & ((1u << 3) - 1)) << 24) |
         ((r->des_short_opd2_str & ((1u << 3) - 1)) << 27) |
         ((r->des_opd0_x_ins0 & ((1u << 2) - 1)) << 30);
  p[1] = ((r->des_cmd_id_gdma >> 13) & ((1u << 3) - 1)) |
         ((r->des_cmd_keep & 1) << 3) |
         ((r->des_cmd_intr_en & 1) << 4) |
         ((r->des_tsk_typ & ((1u << 4) - 1)) << 5) |
         ((r->des_tsk_eu_typ & ((1u << 5) - 1)) << 9) |
         ((r->des_tsk_opd_num & ((1u << 2) - 1)) << 14) |
         ((r->des_opt_right_shift & ((1u << 5) - 1)) << 16) |
         ((r->des_opt_left_shift & ((1u << 5) - 1)) << 21) |
         ((r->des_opt_shift_typ & 1) << 26) |
         ((r->des_opt_res_add & 1) << 27) |
         ((r->des_opt_relu & 1) << 28) |
         ((r->des_opt_left_tran & 1) << 29) |
         ((r->des_opt_winograd & 1) << 30) |
         ((r->des_opt_kernel_rotate & 1) << 31);
  p[0] = (r->des_cmd_en & 1) |
         ((r->des_cmd_end & 1) << 1) |
         ((r->des_cmd_id_en & 1) << 2) |
         ((r->des_cmd_id_tpu & ((1u << 16) - 1)) << 3) |
         ((r->des_cmd_id_gdma & ((1u << 13) - 1)) << 19);
}

static inline void reset_tpu_reg(tpu_reg_t *r)
{
  r->des_cmd_en = 0b0;
  r->des_cmd_end = 0b0;
  r->des_cmd_id_en = 0b0;
  r->des_cmd_id_tpu = 0;
  r->des_cmd_id_gdma = 0;
  r->des_cmd_keep = 0b0;
  r->des_cmd_intr_en = 0b0;
  r->des_tsk_typ = 0;
  r->des_tsk_eu_typ = 0;
  r->des_tsk_opd_num = 0b10;
  r->des_opt_right_shift = 0;
  r->des_opt_left_shift = 0;
  r->des_opt_shift_typ = 0b1;
  r->des_opt_res_add = 0b0;
  r->des_opt_relu = 0b1;
  r->des_opt_left_tran = 0b0;
  r->des_opt_winograd = 0b0;
  r->des_opt_kernel_rotate = 0b0;
  r->des_opt_opd0_sign = 0b0;
  r->des_opt_opd1_sign = 0b1;
  r->des_opt_opd2_sign = 0b1;
  r->des_opt_res0_prec = 0b010;
  r->des_opt_opd0_prec = 0b10;
  r->des_opt_opd1_prec = 0b10;
  r->des_opt_opd2_prec = 0b10;
  r->des_opt_opd0_const = 0b0;
  r->des_opt_opd1_const = 0b0;
  r->des_opt_opd2_const = 0b0;
  r->des_short_res0_str = 0b00;
  r->des_short_opd0_str = 0b00;
  r->des_short_opd1_str = 0b00;
  r->des_short_opd2_str = 0b010;
  r->des_opd0_x_ins0 = 0;
  r->des_opd0_y_ins0 = 0;
  r->des_opd1_x_ins0 = 0;
  r->des_opd1_y_ins0 = 0;
  r->des_opd0_up_pad = 0;
  r->des_opd0_dn_pad = 0;
  r->des_opd0_lf_pad = 0;
  r->des_opd0_rt_pad = 0;
  r->des_res_op_x_str = 1;
  r->des_res_op_y_str = 1;
  r->des_tsk_lane_num = (u64)0xffffffffffffffff;
  r->des_res0_n = 1;
  r->des_res0_c = 1;
  r->des_res0_h = 1;
  r->des_res0_w = 1;
  r->des_opd0_n = 1;
  r->des_opd0_c = 1;
  r->des_opd0_h = 1;
  r->des_opd0_w = 1;
  r->des_opd1_n = 1;
  r->des_opd1_c = 1;
  r->des_opd1_h = 1;
  r->des_opd1_w = 1;
  r->des_res0_h_shift = 0;
  r->des_res0_w_shift = 0;
  r->des_opd0_h_shift = 0;
  r->des_opd0_w_shift = 0;
  r->des_opd1_h_shift = 0;
  r->des_opd1_w_shift = 0;
  r->des_res0_n_str = 1;
  r->des_res0_c_str = 1;
  r->des_opd0_n_str = 1;
  r->des_opd0_c_str = 1;
  r->des_opd1_n_str = 1;
  r->des_opd1_c_str = 1;
  r->des_opd2_n_str = 1;
  r->des_opd2_c_str = 1;
  r->des_opt_res_add_sign = 0;
  r->des_rsvd0 = 0;
  r->des_res0_addr = 0;
  r->des_opd0_addr = 0;
  r->des_opd1_addr = 0;
  r->des_opd2_addr = 0;
  r->des_res0_h_str = 1;
  r->des_res0_w_str = 1;
  r->des_opd0_h_str = 1;
  r->des_opd0_w_str = 1;
  r->des_opd1_h_str = 1;
  r->des_opd1_w_str = 1;
  r->des_opd2_h_str = 1;
  r->des_opd2_w_str = 1;
}

static inline void trace_tpu_reg(tpu_reg_t *r, const char *tag)
{
#define trace_one_reg(name) \
  printf("  %s: %llx\n", #name, (ullong)r->name)

  printf("--- %s ---\n", tag);
  trace_one_reg(des_cmd_en);
  trace_one_reg(des_cmd_end);
  trace_one_reg(des_cmd_id_en);
  trace_one_reg(des_cmd_id_tpu);
  trace_one_reg(des_cmd_id_gdma);
  trace_one_reg(des_cmd_keep);
  trace_one_reg(des_cmd_intr_en);
  trace_one_reg(des_tsk_typ);
  trace_one_reg(des_tsk_eu_typ);
  trace_one_reg(des_tsk_opd_num);
  trace_one_reg(des_opt_right_shift);
  trace_one_reg(des_opt_left_shift);
  trace_one_reg(des_opt_shift_typ);
  trace_one_reg(des_opt_res_add);
  trace_one_reg(des_opt_relu);
  trace_one_reg(des_opt_left_tran);
  trace_one_reg(des_opt_winograd);
  trace_one_reg(des_opt_kernel_rotate);
  trace_one_reg(des_opt_opd0_sign);
  trace_one_reg(des_opt_opd1_sign);
  trace_one_reg(des_opt_opd2_sign);
  trace_one_reg(des_opt_res0_prec);
  trace_one_reg(des_opt_opd0_prec);
  trace_one_reg(des_opt_opd1_prec);
  trace_one_reg(des_opt_opd2_prec);
  trace_one_reg(des_opt_opd0_const);
  trace_one_reg(des_opt_opd1_const);
  trace_one_reg(des_opt_opd2_const);
  trace_one_reg(des_short_res0_str);
  trace_one_reg(des_short_opd0_str);
  trace_one_reg(des_short_opd1_str);
  trace_one_reg(des_short_opd2_str);
  trace_one_reg(des_opd0_x_ins0);
  trace_one_reg(des_opd0_y_ins0);
  trace_one_reg(des_opd1_x_ins0);
  trace_one_reg(des_opd1_y_ins0);
  trace_one_reg(des_opd0_up_pad);
  trace_one_reg(des_opd0_dn_pad);
  trace_one_reg(des_opd0_lf_pad);
  trace_one_reg(des_opd0_rt_pad);
  trace_one_reg(des_res_op_x_str);
  trace_one_reg(des_res_op_y_str);
  trace_one_reg(des_tsk_lane_num);
  trace_one_reg(des_res0_n);
  trace_one_reg(des_res0_c);
  trace_one_reg(des_res0_h);
  trace_one_reg(des_res0_w);
  trace_one_reg(des_opd0_n);
  trace_one_reg(des_opd0_c);
  trace_one_reg(des_opd0_h);
  trace_one_reg(des_opd0_w);
  trace_one_reg(des_opd1_n);
  trace_one_reg(des_opd1_c);
  trace_one_reg(des_opd1_h);
  trace_one_reg(des_opd1_w);
  trace_one_reg(des_res0_h_shift);
  trace_one_reg(des_res0_w_shift);
  trace_one_reg(des_opd0_h_shift);
  trace_one_reg(des_opd0_w_shift);
  trace_one_reg(des_opd1_h_shift);
  trace_one_reg(des_opd1_w_shift);
  trace_one_reg(des_res0_n_str);
  trace_one_reg(des_res0_c_str);
  trace_one_reg(des_opd0_n_str);
  trace_one_reg(des_opd0_c_str);
  trace_one_reg(des_opd1_n_str);
  trace_one_reg(des_opd1_c_str);
  trace_one_reg(des_opd2_n_str);
  trace_one_reg(des_opd2_c_str);
  trace_one_reg(des_opt_res_add_sign);
  trace_one_reg(des_rsvd0);
  trace_one_reg(des_res0_addr);
  trace_one_reg(des_opd0_addr);
  trace_one_reg(des_opd1_addr);
  trace_one_reg(des_opd2_addr);
  trace_one_reg(des_res0_h_str);
  trace_one_reg(des_res0_w_str);
  trace_one_reg(des_opd0_h_str);
  trace_one_reg(des_opd0_w_str);
  trace_one_reg(des_opd1_h_str);
  trace_one_reg(des_opd1_w_str);
  trace_one_reg(des_opd2_h_str);
  trace_one_reg(des_opd2_w_str);
}

#endif
