# ***************************************************************** #
# SSH: Single Stage Headless Face Detector
# Test Prototxt
# Written by Mahyar Najibi
# ***************************************************************** #

name: "TinySSH"

input: "data"
input_shape {
  dim: 1
  dim: 3
  dim: 300
  dim: 300
}

input: "im_info"
input_shape {
  dim: 1
  dim: 3
}

layer {
  name: "bmnet"
  type: "BMNet"
  bottom: "data"
  top: "m3@ssh_cls_score_output"
  top: "m3@ssh_bbox_pred_output"
  top: "m2@ssh_cls_score_output"
  top: "m2@ssh_bbox_pred_output"
  top: "m1@ssh_cls_score_output"
  top: "m1@ssh_bbox_pred_output"
  bmnet_param {
    input_shape {
      dim: 1
      dim: 3
      dim: 300
      dim: 300
      data_type_size: 1
    }
    output_shape {
      dim: 1
      dim: 4
      dim: 10
      dim: 10
      data_type_size: 1
    }
    output_shape {
      dim: 1
      dim: 8
      dim: 10
      dim: 10
      data_type_size: 1
    }
    output_shape {
      dim: 1
      dim: 4
      dim: 19
      dim: 19
      data_type_size: 1
    }
    output_shape {
      dim: 1
      dim: 8
      dim: 19
      dim: 19
      data_type_size: 1
    }
    output_shape {
      dim: 1
      dim: 4
      dim: 38
      dim: 38
      data_type_size: 1
    }
    output_shape {
      dim: 1
      dim: 8
      dim: 38
      dim: 38
      data_type_size: 1
    }

    in_threshold: 152.094161987
    bmodel: "/disk2/bmtap2/bmnet/out/tiny_ssh_1_3_300_300.bmodel"
  }
}

#========== M3@SSH =========
layer {
   name: "m3@ssh_cls_reshape"
   type: "Reshape"
   bottom: "m3@ssh_cls_score_output"
   top: "m3@ssh_cls_score_reshape_output"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}
layer {
  name: "m3@ssh_cls_prob"
  type: "Softmax"
  bottom: "m3@ssh_cls_score_reshape_output"
  top: "m3@ssh_cls_prob_output"
}
layer {
  name: 'm3@ssh_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'm3@ssh_cls_prob_output'
  top: 'm3@ssh_cls_prob_reshape_output'
  reshape_param { shape { dim: 0 dim:4  dim: -1 dim: 0 } }
}
layer {
  name: 'm3@ssh_proposal'
  type: 'Python'
  bottom: 'm3@ssh_cls_prob_reshape_output'
  bottom: 'm3@ssh_bbox_pred_output'
  bottom: 'im_info'
  top: 'm3@ssh_boxes'
  top: 'm3@ssh_cls_prob'
  python_param {
    module: 'SSH.layers.proposal_layer'
    layer: 'ProposalLayer'
    param_str: "{'feat_stride': 32, 'base_size': 4, 'scales': [32,64], 'ratios':[1,]}"
  }
}

#========== M2@SSH =========
layer {
   bottom: "m2@ssh_cls_score_output"
   top: "m2@ssh_cls_score_reshape_output"
   name: "m2@ssh_cls_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}


layer {
  name: "m2@ssh_cls_prob"
  type: "Softmax"
  bottom: "m2@ssh_cls_score_reshape_output"
  top: "m2@ssh_cls_prob_output"
}
layer {
  name: 'm2@ssh_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'm2@ssh_cls_prob_output'
  top: 'm2@ssh_cls_prob_reshape_output'
  reshape_param { shape { dim: 0 dim:4  dim: -1 dim: 0 } }
}
layer {
  name: 'm2@ssh_proposal'
  type: 'Python'
  bottom: 'm2@ssh_cls_prob_reshape_output'
  bottom: 'm2@ssh_bbox_pred_output'
  bottom: 'im_info'
  top: 'm2@ssh_boxes'
  top: 'm2@ssh_cls_prob'
  python_param {
    module: 'SSH.layers.proposal_layer'
    layer: 'ProposalLayer'
    param_str: "{'feat_stride': 16, 'base_size': 4, 'scales': [8,16], 'ratios':[1,]}"
  }
}


#========== M1@SSH =========
layer {
   bottom: "m1@ssh_cls_score_output"
   top: "m1@ssh_cls_score_reshape_output"
   name: "m1@ssh_cls_reshape"
   type: "Reshape"
   reshape_param { shape { dim: 0 dim: 2 dim: -1 dim: 0 } }
}
layer {
  name: "m1@ssh_cls_prob"
  type: "Softmax"
  bottom: "m1@ssh_cls_score_reshape_output"
  top: "m1@ssh_cls_prob_output"
}
layer {
  name: 'm1@ssh_cls_prob_reshape'
  type: 'Reshape'
  bottom: 'm1@ssh_cls_prob_output'
  top: 'm1@ssh_cls_prob_reshape_output'
  reshape_param { shape { dim: 0 dim:4  dim: -1 dim: 0 } }
}
layer {
  name: 'm1@ssh_proposal'
  type: 'Python'
  bottom: 'm1@ssh_cls_prob_reshape_output'
  bottom: 'm1@ssh_bbox_pred_output'
  bottom: 'im_info'
  top: 'm1@ssh_boxes'
  top: 'm1@ssh_cls_prob'
  python_param {
    module: 'SSH.layers.proposal_layer'
    layer: 'ProposalLayer'
    param_str: "{'feat_stride': 8, 'base_size': 4, 'scales': [2,4], 'ratios':[1,]}"
  }
}


# CONCAT ALL detections
layer{
  name: "ssh_cls_prob"
  type: "Concat"
  bottom: "m1@ssh_cls_prob"
  bottom: "m2@ssh_cls_prob"
  bottom: "m3@ssh_cls_prob"
  top: "ssh_cls_prob"
  concat_param{
    axis: 0
  }
}

layer{
  name: "ssh_boxes"
  type: "Concat"
  bottom: "m1@ssh_boxes"
  bottom: "m2@ssh_boxes"
  bottom: "m3@ssh_boxes"
  top: "ssh_boxes"
  concat_param{
    axis: 0
  }
}
